[project]
name = "fiberwise-common"
version = "0.1.0"
description = "Common services and utilities for FiberWise applications"
authors = [
    {name = "FiberWise", email = "dev@fiberwise.ai"},
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "pydantic>=2.0.0",
    "email-validator>=1.1.0",
    "pydantic-settings>=2.0",
    "python-dotenv>=1.0.0",
    "fastapi>=0.100.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "aiosqlite>=0.17.0",
    "asyncpg>=0.28.0",
]

[project.optional-dependencies]
# Worker integrations
aws = [
    "boto3>=1.28.0",
    "botocore>=1.31.0",
]
celery = [
    "celery>=5.3.0",
    "redis>=6.4.0",
]
rabbitmq = [
    "pika>=1.3.0",
]
redis = [
    "redis>=6.4.0",
]
# Testing and development
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.0.250",
]
# All worker dependencies
workers = [
    "boto3>=1.28.0",
    "botocore>=1.31.0", 
    "celery>=5.3.0",
    "redis>=6.4.0",
    "pika>=1.3.0",
]

[project.urls]
Homepage = "https://fiberwise.ai"
Documentation = "https://docs.fiberwise.ai/"
Repository = "https://github.com/fiberwise-ai/fiberwise-common"
"Bug Tracker" = "https://github.com/fiberwise/fiberwise-common/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["fiberwise_common*"]

[tool.setuptools.package-data]
"fiberwise_common.database.sql" = ["*.sql"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--asyncio-mode=auto",
]
testpaths = [
    "tests",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow tests",
    "database: Tests that require database",
    "service: Service layer tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["fiberwise_common"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 100

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
